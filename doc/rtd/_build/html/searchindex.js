Search.setIndex({"docnames": ["README", "content/01_example_pool/01_howtos_streams/howto_bf_streams_001_accessing_data_from_river", "content/01_example_pool/01_streams", "content/01_example_pool/02_cluster_analysis", "content/01_example_pool/02_howtos_cluster_analysis/howto_oa_ca_001_run_kmeans_2d_static", "content/02_api/00_basic", "content/02_api/01_streams", "content/02_api/02_cluster_analysis", "content/02_api/03_anomaly_detection", "content/03_about/01_versions", "content/03_about/02_disclaimer", "index"], "filenames": ["README.rst", "content/01_example_pool/01_howtos_streams/howto_bf_streams_001_accessing_data_from_river.rst", "content/01_example_pool/01_streams.rst", "content/01_example_pool/02_cluster_analysis.rst", "content/01_example_pool/02_howtos_cluster_analysis/howto_oa_ca_001_run_kmeans_2d_static.rst", "content/02_api/00_basic.rst", "content/02_api/01_streams.rst", "content/02_api/02_cluster_analysis.rst", "content/02_api/03_anomaly_detection.rst", "content/03_about/01_versions.rst", "content/03_about/02_disclaimer.rst", "index.rst"], "titles": ["Documentation", "Howto BF-STREAMS-001: Accessing Native Data From MLPro", "Reuse of River Data Streams", "Reuse of River Cluster Analyzers", "Howto OA-CA-001: Run KMEANS on 2D static point clouds", "Wrapper Root Class", "Wrappers for River Data Streams", "Wrappers for River Cluster Analyzers", "Wrappers for River Anomaly Detectors", "Release Notes", "Disclaimer", "MLPro-Int-River - Integration of River into MLPro"], "terms": {"read": 0, "mlpro": [0, 2, 4, 5, 6, 7, 8], "onlin": [0, 5, 6, 7, 11], "http": [0, 5, 6, 7, 8], "readthedoc": 0, "io": 0, "option": [0, 6, 7], "build": 0, "yourself": 0, "from": [0, 2, 4, 6, 7, 8, 10, 11], "doc": 0, "folder": 0, "clone": 0, "repositori": [0, 1], "open": 0, "_build": 0, "html": 0, "index": 0, "your": [0, 10, 11], "browser": 0, "execut": [1, 4], "code": [1, 4], "project": [1, 4, 10], "A": [1, 4, 7], "synopt": [1, 4], "framework": [1, 4, 11], "standard": [1, 4, 7, 11], "machin": [1, 4, 7, 11], "learn": [1, 4, 5, 6, 7, 8, 11], "task": [1, 4, 7], "packag": [1, 4, 11], "mlpro_int_riv": [1, 4, 5, 6, 7, 8], "modul": [1, 4, 5, 6, 7, 8], "howto_bf_streams_001_accessing_data_from_riv": 1, "py": [1, 4, 6], "histori": [1, 4, 9], "yyyi": [1, 4], "mm": [1, 4], "dd": [1, 4], "ver": [1, 4, 5, 6, 7, 8], "auth": [1, 4], "descript": [1, 4], "2022": 1, "06": 1, "14": 1, "0": [1, 4, 5, 6, 7, 8], "lsb": 1, "creation": [1, 4], "1": [1, 4, 7, 8], "releas": [1, 4, 11], "first": [1, 4, 7], "version": [1, 4, 6, 7, 11], "25": [1, 7], "refactor": 1, "new": [1, 7, 8], "label": [1, 6], "instanc": [1, 6, 7, 8], "class": [1, 4, 6, 7, 8, 11], "10": [1, 7], "12": [1, 4, 5, 7, 8], "2": [1, 4, 5, 6, 7], "da": [1, 4], "renam": 1, "11": 1, "07": 1, "after": [1, 6, 7], "chang": [1, 10], "08": 1, "minor": 1, "improv": 1, "19": 1, "get": [1, 4, 6, 7], "string": 1, "name": [1, 6, 7], "21": 1, "3": [1, 4, 7, 8], "correct": 1, "log": [1, 4, 6, 7], "2023": [1, 4, 5, 6, 8], "02": [1, 7], "4": [1, 4], "time": [1, 7], "measur": 1, "04": [1, 6], "16": [1, 6], "5": [1, 4, 7, 8], "number": [1, 4, 6, 7], "2024": [1, 7], "01": [1, 7, 8], "30": 1, "reloc": 1, "separ": 1, "github": [1, 6, 9, 11], "thi": [1, 4, 5, 6, 7, 8, 10], "demonstr": [1, 4], "us": [1, 7, 10, 11], "river": [1, 4, 5], "dataset": [1, 6], "To": [1, 7], "regard": 1, "provid": [1, 5, 6, 7, 8, 10, 11], "wrapper": [1, 4, 11], "own": [1, 4, 10], "ml": [1, 6], "applic": [1, 11], "you": [1, 10], "how": 1, "iter": 1, "an": [1, 6, 7, 11], "featur": [1, 6, 7], "datetim": [1, 4], "import": [1, 4, 7], "variou": [1, 4], "prepar": [1, 4, 11], "demo": [1, 4], "unit": [1, 4, 7], "test": [1, 4], "mode": [1, 4, 6], "__name__": [1, 4], "__main__": [1, 4], "num_inst": 1, "c_log_al": [1, 4, 6, 7], "els": [1, 4], "print": 1, "n": 1, "now": [1, 4], "__file__": 1, "c_log_noth": [1, 4], "creat": 1, "wrstreamproviderriv": [1, 6, 11], "p_log": [1, 4, 5, 6, 7, 8], "list": [1, 4, 6, 7, 8], "avail": 1, "stream_list": [1, 6], "get_stream_list": 1, "bike": 1, "mystream": 1, "get_stream": 1, "p_name": [1, 4, 6, 7, 8], "space": [1, 6, 8], "feature_spac": [1, 6], "get_feature_spac": [1, 6], "c_log_type_i": [1, 4], "get_num_dim": 1, "set": [1, 4, 6, 7, 8], "up": [1, 4, 6, 7], "myiter": 1, "6": 1, "fetch": [1, 6], "some": 1, "c_log_type_w": 1, "str": [1, 4, 6, 7, 8], "i": [1, 4, 6, 7, 8, 10, 11], "rang": [1, 4, 7], "curr_inst": 1, "next": [1, 6], "curr_data": 1, "get_feature_data": 1, "get_valu": [1, 4], "curr_label": 1, "get_label_data": 1, "7": 1, "reset": [1, 4, 6], "8": 1, "all": [1, 4, 5, 6, 7, 10], "182": 1, "470": 1, "get_num_inst": 1, "enumer": 1, "rest": 1, "dark": 1, "switch_log": 1, "tp_start": 1, "statist": [1, 7], "tp_end": 1, "durat": [1, 4], "duration_sec": 1, "second": [1, 4], "1000000": [1, 4], "microsecond": [1, 4], "rate": 1, "done": 1, "round": [1, 4], "throughput": 1, "sec": [1, 4], "result": [1, 4, 7], "cross": [1, 4], "refer": [1, 4, 7], "api": [1, 4, 7], "howto": [2, 3, 11], "bf": [2, 4, 11], "001": [2, 3, 11], "access": [2, 11], "nativ": [2, 5, 6, 11], "oa": [3, 11], "ca": [3, 11], "run": [3, 8, 11], "kmean": [3, 7, 11], "2d": [3, 11], "static": [3, 11], "point": [3, 7, 11], "cloud": [3, 11], "howto_oa_ca_001_run_kmeans_2d_stat": 4, "22": 4, "sy": 4, "28": 4, "exchang": 4, "benchmark": 4, "stream": [4, 5, 7, 8, 11], "workflow": 4, "which": [4, 7, 10], "wrap": 4, "algorithm": [4, 5, 7, 8, 11], "In": 4, "we": [4, 7, 10], "scientif": 4, "paper": 4, "go": 4, "store": [4, 7], "ocean": 4, "capsul": 4, "thu": 4, "reproduc": 4, "clusteranalyz": [4, 7], "scenario": 4, "3d": 4, "static3dscenario": 4, "oascenario": 4, "c_name": [4, 6, 7, 8], "static2dscenario": 4, "def": 4, "_setup": 4, "self": 4, "p_mode": [4, 6], "p_ada": [4, 7, 8], "bool": [4, 6, 7, 8], "p_visual": [4, 7, 8], "streammlprocloud": 4, "p_num_dim": 4, "p_num_inst": [4, 6], "2000": 4, "p_num_cloud": 4, "p_seed": [4, 7], "p_radii": 4, "100": [4, 7, 8], "oaworkflow": 4, "wf_2d": 4, "p_range_max": [4, 7, 8], "c_range_non": 4, "add": [4, 7], "them": 4, "cluster": [4, 5, 11], "analyz": [4, 11], "task_cluster": 4, "wrriverkmeans2mlpro": [4, 7, 11], "t1": 4, "p_n_cluster": [4, 7], "p_halflif": [4, 7], "p_sigma": [4, 7], "42": 4, "add_task": 4, "p_task": 4, "return": [4, 6, 7], "cycle_limit": 4, "1000": [4, 7], "visual": [4, 7], "true": [4, 5, 6, 7, 8], "step_rat": 4, "fals": [4, 7, 8], "instanti": [4, 7], "myscenario": 4, "c_mode_r": 4, "p_cycle_limit": 4, "init_plot": 4, "p_plot_set": 4, "plotset": 4, "p_view": 4, "c_view_nd": 4, "p_step_rat": 4, "input": 4, "npleas": 4, "arrang": 4, "window": [4, 7], "press": 4, "enter": 4, "start": 4, "process": [4, 7, 8, 11], "tp_befor": 4, "tp_after": 4, "tp_delta": 4, "duraction_sec": 4, "c_log_type_": 4, "cycl": 4, "get_workflow": 4, "_task": 4, "get_clust": [4, 7], "number_of_clust": 4, "len": 4, "here": [4, 6, 7], "recap": 4, "x": 4, "center": [4, 7], "get_centroid": 4, "exit": 4, "05": [5, 7, 8], "emb": [5, 6], "function": [5, 6, 8, 11], "current": [5, 7], "follow": [5, 7, 10, 11], "topic": [5, 11], "ar": [5, 7, 8, 10], "support": 5, "data": [5, 7, 11], "select": [5, 11], "more": [5, 6, 7, 8, 10], "www": [5, 6, 7, 8], "riverml": [5, 6, 7, 8], "xyz": [5, 6, 7, 8], "basic": 5, "wrapperriv": [5, 6, 7, 11], "base": [5, 6, 7, 8], "c_type": [5, 6, 7, 8], "c_wrapped_packag": [5, 7], "c_minimum_vers": [5, 7], "15": [5, 7], "c_sciref_typ": [5, 6], "c_sciref_author": 5, "c_sciref_url": 5, "streamprovid": 6, "The": [6, 7, 10, 11], "full": [6, 7], "can": [6, 7, 10], "found": [6, 10], "com": 6, "blob": 6, "main": 6, "__init__": 6, "paramet": [6, 7, 8], "level": 6, "object": [6, 7], "see": [6, 7, 11], "constant": 6, "default": [6, 7], "_get_stream_list": 6, "p_kwarg": [6, 7, 8], "custom": [6, 7, 8], "alist": 6, "oper": 6, "c_mode_sim": 6, "dict": [6, 7], "further": [6, 7, 11], "specif": [6, 7], "type": [6, 7], "_get_stream": 6, "p_id": 6, "none": [6, 7, 8], "id": [6, 7], "request": 6, "": [6, 7, 10], "case": 6, "error": 6, "wrstreamriv": [6, 11], "int": [6, 7], "p_version": 6, "p_feature_spac": 6, "mspace": 6, "p_label_spac": 6, "_reset": 6, "method": [6, 7, 8], "download": 6, "_setup_feature_spac": 6, "It": [6, 7, 11], "call": [6, 8], "_setup_label_spac": 6, "get_label_spac": 6, "label_spac": 6, "_download": 6, "correspond": [6, 7], "load": 6, "statu": 6, "_get_next": 6, "last": 6, "includ": [7, 8], "three": 7, "embed": [7, 8], "dbstream": 7, "latest": [7, 9, 11], "clustream": 7, "denstream": 7, "streamkmean": 7, "wrclusteranalyzerriver2mlpro": [7, 11], "p_cls_cluster": 7, "p_river_algo": 7, "each": 7, "child": 7, "either": 7, "thread": 7, "mltask": 7, "c_range_thread": 7, "turn": [7, 11], "adapt": 7, "_adapt": 7, "p_inst_new": [7, 8], "accord": 7, "incom": 7, "someth": 7, "ha": 7, "been": 7, "otherwis": 7, "_update_clust": 7, "updat": 7, "centroid": 7, "introduc": 7, "defin": 7, "mechan": 7, "list_of_clust": 7, "get_algorithm": 7, "get_cluster_membership": 7, "p_inst": 7, "p_scope": 7, "tupl": 7, "float": 7, "public": 7, "determin": 7, "membership": 7, "given": 7, "valu": 7, "percent": 7, "evalu": 7, "scope": 7, "attribut": 7, "c_ms_scope_": 7, "possibl": 7, "c_ms_scope_max": 7, "consist": 7, "rel": 7, "wrriverdbstream2mlpro": [7, 11], "p_clustering_threshold": 7, "p_fading_factor": 7, "p_cleanup_interv": 7, "p_intersection_factor": 7, "p_minimum_weight": 7, "evolv": 7, "micro": 7, "compon": 7, "explicit": 7, "captur": 7, "densiti": 7, "between": 7, "via": 7, "share": 7, "graph": 7, "inform": [7, 10], "exploit": 7, "reclust": 7, "actual": 7, "adjac": 7, "divid": 7, "two": [7, 8], "part": 7, "mainten": 7, "offlin": 7, "gener": [7, 10], "macro": 7, "repres": 7, "leader": 7, "area": 7, "user": 7, "specifi": 7, "radiu": 7, "clustering_threshold": 7, "around": 7, "control": [7, 10], "histor": 7, "note": [7, 11], "fading_factor": 7, "differ": [7, 10], "interv": 7, "consecut": 7, "when": [7, 10], "cleanup": 7, "conduct": 7, "intersect": 7, "factor": 7, "relat": 7, "overlap": 7, "cover": 7, "whether": 7, "weak": 7, "minimum": 7, "weight": 7, "noisi": 7, "dict_of_clust": 7, "_renorm": 7, "p_normal": 7, "normal": 7, "intern": 7, "enorm": 7, "hard": 7, "realiz": 7, "without": [7, 10], "strong": 7, "depend": 7, "implement": 7, "detail": 7, "wrriverclustream2mlpro": [7, 11], "p_n_macro_clust": 7, "p_max_micro_clust": 7, "p_micro_cluster_r_factor": 7, "p_time_window": 7, "p_time_gap": 7, "p_mu": 7, "p_p": 7, "maintain": 7, "about": [7, 10], "These": [7, 10], "tempor": 7, "extens": [7, 11], "vector": 7, "snapshot": 7, "pyramid": 7, "pattern": 7, "allow": 7, "recal": 7, "summari": 7, "horizon": 7, "k": 7, "mean": 7, "maximum": 7, "multipli": 7, "decid": 7, "boundari": 7, "micro_cluster_r_factor": 7, "rm": 7, "deviat": 7, "If": [7, 10], "t": 7, "h": 7, "onli": [7, 10], "consid": 7, "arriv": 7, "within": 7, "period": 7, "increment": 7, "appli": [7, 10, 11], "time_gap": 7, "form": 7, "final": 7, "solut": 7, "random": 7, "seed": 7, "initi": 7, "posit": 7, "amount": 7, "move": 7, "reason": 7, "distribut": 7, "power": 7, "minkowski": 7, "metric": 7, "p": 7, "manhattan": 7, "distanc": 7, "while": [7, 10], "euclidean": 7, "wrriverdenstream2mlpro": [7, 11], "p_decaying_factor": 7, "p_beta": 7, "75": 7, "p_epsilon": 7, "p_n_samples_init": 7, "p_stream_spe": 7, "discov": 7, "arbitrari": 7, "shape": 7, "robust": 7, "against": 7, "nois": 7, "outlier": 7, "dens": 7, "core": 7, "summaris": 7, "prune": 7, "strategi": 7, "concept": 7, "potenti": 7, "guarante": 7, "precis": 7, "limit": 7, "memori": 7, "decaying_factor": 7, "threshold": 7, "beta": 7, "must": 7, "As": 7, "mu": 7, "greater": 7, "than": 7, "inf": 7, "epsilon": 7, "neighborhood": 7, "initiq": 7, "clustercentroid": 7, "most": 7, "common": 7, "wai": 7, "batch": 7, "lloyd": 7, "assign": 7, "accordingli": 7, "renorm": 7, "oatask": 7, "renormalize_on_ev": 7, "wrriverstreamkmeans2mlpro": [7, 11], "p_chunk_siz": 7, "altern": 7, "origin": 7, "streamlsearch": 7, "propos": 7, "o": 7, "callaghan": 7, "et": 7, "al": 7, "replac": 7, "median": 7, "lsearch": 7, "howev": 7, "instead": 7, "tradit": 7, "requir": [7, 10], "total": 7, "temporari": 7, "chunk": 7, "increament": 7, "size": 7, "incorpor": 8, "ecosystem": 8, "half": 8, "tree": 8, "hst": [8, 11], "One": 8, "svm": [8, 11], "anomalydetector": 8, "p_no_tre": 8, "p_height": 8, "p_window_s": 8, "p_sizeof_instance_list": 8, "p_duplicate_data": 8, "_run": 8, "p_inst_del": 8, "obsolet": 8, "remov": [8, 10], "p_kernel": 8, "rbf": 8, "p_nu": 8, "oneclasssvm": 8, "upcom": 9, "ani": 10, "have": 10, "question": 10, "our": 10, "pleas": [10, 11], "feel": 10, "free": 10, "contact": 10, "u": 10, "email": 10, "listen": 10, "fh": 10, "swf": 10, "de": 10, "websit": 10, "publish": 10, "good": 10, "faith": 10, "purpos": 10, "do": 10, "make": 10, "warranti": 10, "complet": 10, "reliabl": 10, "accuraci": 10, "action": 10, "take": 10, "upon": 10, "find": 10, "strictli": 10, "risk": 10, "south": [10, 11], "westphalia": [10, 11], "univers": [10, 11], "scienc": [10, 11], "germani": [10, 11], "liabl": 10, "loss": 10, "damag": 10, "connect": 10, "visit": 10, "other": 10, "hyperlink": 10, "extern": 10, "site": 10, "strive": 10, "qualiti": 10, "link": 10, "ethic": 10, "over": 10, "content": 10, "natur": 10, "impli": 10, "recommend": 10, "owner": 10, "mai": 10, "notic": 10, "occur": 10, "befor": [10, 11], "opportun": 10, "gone": 10, "bad": 10, "also": [10, 11], "awar": 10, "leav": 10, "privaci": 10, "polici": 10, "term": 10, "beyond": 10, "sure": 10, "check": 10, "well": 10, "servic": 10, "engag": 10, "busi": 10, "upload": 10, "By": 10, "herebi": 10, "agre": 10, "its": 10, "welcom": 11, "middlewar": 11, "python": 11, "develop": 11, "templat": 11, "hybrid": 11, "numer": 11, "state": 11, "art": 11, "sever": 11, "enabl": 11, "illustr": 11, "program": 11, "instal": 11, "pip": 11, "upgrad": 11, "profession": 11, "sub": 11, "reus": 11, "root": 11, "anomali": 11, "detector": 11, "disclaim": 11, "usag": 11, "consent": 11}, "objects": {"mlpro_int_river.wrappers": [[8, 0, 0, "-", "anomalydetectors"], [5, 0, 0, "-", "basics"], [7, 0, 0, "-", "clusteranalyzers"], [6, 0, 0, "-", "streams"]], "mlpro_int_river.wrappers.anomalydetectors": [[8, 1, 1, "", "HST"], [8, 1, 1, "", "SVM"]], "mlpro_int_river.wrappers.anomalydetectors.HST": [[8, 2, 1, "", "C_NAME"], [8, 2, 1, "", "C_TYPE"], [8, 3, 1, "", "_run"]], "mlpro_int_river.wrappers.anomalydetectors.SVM": [[8, 2, 1, "", "C_NAME"], [8, 2, 1, "", "C_TYPE"], [8, 3, 1, "", "_run"]], "mlpro_int_river.wrappers.basics": [[5, 1, 1, "", "WrapperRiver"]], "mlpro_int_river.wrappers.basics.WrapperRiver": [[5, 2, 1, "", "C_MINIMUM_VERSION"], [5, 2, 1, "", "C_SCIREF_AUTHOR"], [5, 2, 1, "", "C_SCIREF_TYPE"], [5, 2, 1, "", "C_SCIREF_URL"], [5, 2, 1, "", "C_TYPE"], [5, 2, 1, "", "C_WRAPPED_PACKAGE"]], "mlpro_int_river.wrappers.clusteranalyzers": [[7, 1, 1, "", "WrClusterAnalyzerRiver2MLPro"], [7, 1, 1, "", "WrRiverCluStream2MLPro"], [7, 1, 1, "", "WrRiverDBStream2MLPro"], [7, 1, 1, "", "WrRiverDenStream2MLPro"], [7, 1, 1, "", "WrRiverKMeans2MLPro"], [7, 1, 1, "", "WrRiverStreamKMeans2MLPro"]], "mlpro_int_river.wrappers.clusteranalyzers.WrClusterAnalyzerRiver2MLPro": [[7, 2, 1, "", "C_MINIMUM_VERSION"], [7, 2, 1, "", "C_TYPE"], [7, 2, 1, "", "C_WRAPPED_PACKAGE"], [7, 3, 1, "", "_adapt"], [7, 3, 1, "", "_update_clusters"], [7, 3, 1, "", "get_algorithm"], [7, 3, 1, "", "get_cluster_memberships"], [7, 3, 1, "", "get_clusters"]], "mlpro_int_river.wrappers.clusteranalyzers.WrRiverCluStream2MLPro": [[7, 2, 1, "", "C_TYPE"], [7, 3, 1, "", "_renormalize"], [7, 3, 1, "", "_update_clusters"], [7, 3, 1, "", "get_clusters"]], "mlpro_int_river.wrappers.clusteranalyzers.WrRiverDBStream2MLPro": [[7, 2, 1, "", "C_TYPE"], [7, 3, 1, "", "_renormalize"], [7, 3, 1, "", "_update_clusters"], [7, 3, 1, "", "get_clusters"]], "mlpro_int_river.wrappers.clusteranalyzers.WrRiverDenStream2MLPro": [[7, 2, 1, "", "C_TYPE"], [7, 3, 1, "", "_renormalize"], [7, 3, 1, "", "_update_clusters"], [7, 3, 1, "", "get_clusters"]], "mlpro_int_river.wrappers.clusteranalyzers.WrRiverKMeans2MLPro": [[7, 2, 1, "", "C_TYPE"], [7, 3, 1, "", "_renormalize"], [7, 3, 1, "", "_update_clusters"], [7, 3, 1, "", "get_clusters"]], "mlpro_int_river.wrappers.clusteranalyzers.WrRiverStreamKMeans2MLPro": [[7, 2, 1, "", "C_NAME"], [7, 3, 1, "", "_renormalize"], [7, 3, 1, "", "_update_clusters"], [7, 3, 1, "", "get_clusters"]], "mlpro_int_river.wrappers.streams": [[6, 1, 1, "", "WrStreamProviderRiver"], [6, 1, 1, "", "WrStreamRiver"]], "mlpro_int_river.wrappers.streams.WrStreamProviderRiver": [[6, 2, 1, "", "C_NAME"], [6, 3, 1, "", "_get_stream"], [6, 3, 1, "", "_get_stream_list"]], "mlpro_int_river.wrappers.streams.WrStreamRiver": [[6, 2, 1, "", "C_SCIREF_TYPE"], [6, 2, 1, "", "C_TYPE"], [6, 3, 1, "", "_download"], [6, 3, 1, "", "_get_next"], [6, 3, 1, "", "_reset"], [6, 3, 1, "", "_setup_feature_space"], [6, 3, 1, "", "_setup_label_space"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"]}, "titleterms": {"document": 0, "howto": [1, 4], "bf": 1, "stream": [1, 2, 6], "001": [1, 4], "access": 1, "nativ": 1, "data": [1, 2, 6], "from": 1, "mlpro": [1, 10, 11], "reus": [2, 3], "river": [2, 3, 6, 7, 8, 11], "cluster": [3, 7], "analyz": [3, 7], "oa": 4, "ca": 4, "run": 4, "kmean": 4, "2d": 4, "static": 4, "point": 4, "cloud": 4, "wrapper": [5, 6, 7, 8], "root": 5, "class": 5, "anomali": 8, "detector": 8, "releas": 9, "note": 9, "disclaim": 10, "usag": 10, "consent": 10, "int": 11, "integr": 11, "exampl": 11, "pool": 11, "api": 11, "about": 11}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Documentation": [[0, "documentation"]], "Howto BF-STREAMS-001: Accessing Native Data From MLPro": [[1, "howto-bf-streams-001-accessing-native-data-from-mlpro"]], "Reuse of River Data Streams": [[2, "reuse-of-river-data-streams"]], "Reuse of River Cluster Analyzers": [[3, "reuse-of-river-cluster-analyzers"]], "Wrapper Root Class": [[5, "wrapper-root-class"]], "Wrappers for River Data Streams": [[6, "wrappers-for-river-data-streams"]], "Wrappers for River Cluster Analyzers": [[7, "wrappers-for-river-cluster-analyzers"]], "Release Notes": [[9, "release-notes"]], "Disclaimer": [[10, "disclaimer"]], "Disclaimers for MLPro Usage": [[10, "disclaimers-for-mlpro-usage"]], "Consent": [[10, "consent"]], "MLPro-Int-River - Integration of River into MLPro": [[11, "mlpro-int-river-integration-of-river-into-mlpro"]], "MLPro-Int-River - Example Pool": [[11, null]], "API": [[11, null]], "About": [[11, null]], "Howto OA-CA-001: Run KMEANS on 2D static point clouds": [[4, "howto-oa-ca-001-run-kmeans-on-2d-static-point-clouds"]], "Wrappers for River Anomaly Detectors": [[8, "wrappers-for-river-anomaly-detectors"]]}, "indexentries": {"c_name (mlpro_int_river.wrappers.anomalydetectors.hst attribute)": [[8, "mlpro_int_river.wrappers.anomalydetectors.HST.C_NAME"]], "c_name (mlpro_int_river.wrappers.anomalydetectors.svm attribute)": [[8, "mlpro_int_river.wrappers.anomalydetectors.SVM.C_NAME"]], "c_type (mlpro_int_river.wrappers.anomalydetectors.hst attribute)": [[8, "mlpro_int_river.wrappers.anomalydetectors.HST.C_TYPE"]], "c_type (mlpro_int_river.wrappers.anomalydetectors.svm attribute)": [[8, "mlpro_int_river.wrappers.anomalydetectors.SVM.C_TYPE"]], "hst (class in mlpro_int_river.wrappers.anomalydetectors)": [[8, "mlpro_int_river.wrappers.anomalydetectors.HST"]], "svm (class in mlpro_int_river.wrappers.anomalydetectors)": [[8, "mlpro_int_river.wrappers.anomalydetectors.SVM"]], "_run() (mlpro_int_river.wrappers.anomalydetectors.hst method)": [[8, "mlpro_int_river.wrappers.anomalydetectors.HST._run"]], "_run() (mlpro_int_river.wrappers.anomalydetectors.svm method)": [[8, "mlpro_int_river.wrappers.anomalydetectors.SVM._run"]], "mlpro_int_river.wrappers.anomalydetectors": [[8, "module-mlpro_int_river.wrappers.anomalydetectors"]], "module": [[8, "module-mlpro_int_river.wrappers.anomalydetectors"]]}})